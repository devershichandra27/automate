/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nic.automate;

import java.awt.BorderLayout;
import nic.automate.Automate;
import java.awt.event.ActionListener;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author root
 */
public class ViewDatabase extends javax.swing.JFrame {

    String[] columnNames = {"name", "ip_address", "PORT_80", "PORT_443", "PORT_8080", "PORT_8081", "WEBSITE_INFRASTRUCTURE"};
    DefaultTableModel model;
    JTable table;
    JScrollPane scroll;
    /**
     * Creates new form ViewDatabase
     */
    @SuppressWarnings("OverridableMethodCallInConstructor")
    public ViewDatabase() throws SQLException {
        super("Database View");
        populateTable(executeQueryStatement(new String("select * from demo limit 1, 5")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        refresh = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenu4 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        jMenu3.setText("jMenu3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu1.setText("File");

        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        jMenu1.add(refresh);
        jMenu1.add(jSeparator1);

        jMenu4.setText("Insert");
        jMenu1.add(jMenu4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        try {
            // TODO add your handling code here:
            clearTable();
            populateTable(executeQueryStatement("select * from demo"));
            infoBox("Table content Refreshed!", "Refresh");
        } catch (SQLException ex) {
            Logger.getLogger(ViewDatabase.class.getName()).log(Level.SEVERE, null, ex);
            infoBox("Operation Failed", "Refresh");
        }
    }//GEN-LAST:event_refreshActionPerformed

    
    private ResultSet executeQueryStatement(String sql) throws SQLException
    {
        PreparedStatement ps;
        ps = Automate.connection.prepareStatement(sql);
        return ps.executeQuery();
    }
    
    public static void infoBox(String infoMessage, String titleBar)
    {
        JOptionPane.showMessageDialog(null, infoMessage, "InfoBox: " + titleBar, JOptionPane.INFORMATION_MESSAGE);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuItem refresh;
    // End of variables declaration//GEN-END:variables

    private void populateTable(ResultSet rs) throws SQLException {
        setUpTable();
        while(rs.next())
          model.addRow(new Object[]{rs.getString("name"), rs.getString("ip_address"), rs.getString("PORT_80"), rs.getString("PORT_443"), rs.getString("PORT_8080"), rs.getString("PORT_8081"), rs.getString("WEBSITE_INFRASTRUCTURE") });
        add(scroll);
        setSize(1500, 800);
        setVisible(true);
        initComponents();
    }
    
    public void setUpTable()
    {
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());
        model = new DefaultTableModel();
        model.setColumnIdentifiers(columnNames);
        table = new JTable();
        table.setModel(model);
        table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        table.getColumnModel().getColumn(0).setPreferredWidth(275);
        table.getColumnModel().getColumn(1).setPreferredWidth(150);
        table.getColumnModel().getColumn(2).setPreferredWidth(100);
        table.getColumnModel().getColumn(3).setPreferredWidth(100);
        table.getColumnModel().getColumn(4).setPreferredWidth(100);
        table.getColumnModel().getColumn(5).setPreferredWidth(100);
        table.getColumnModel().getColumn(6).setPreferredWidth(460);
        table.setFillsViewportHeight(true);
        scroll = new JScrollPane(table);
        scroll.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        scroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
    }
    public void clearTable() {
    for( int i = model.getRowCount()-1; i >= 0; i-- ) {
        model.removeRow(i);
    }
    model = null;
    table=null;
    scroll = null;
    }
}
