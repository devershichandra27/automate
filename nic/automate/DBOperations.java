/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nic.automate;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.swing.JFileChooser;

/**
 *
 * @author root
 */
public class DBOperations extends javax.swing.JFrame {

    /**
     * Creates new form DBOperations
     */
    public DBOperations() {
        initComponents();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        queryResultField = new javax.swing.JLabel();
        port80FileButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nameIpFileButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        port443FileButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        port8080FileButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        port8081FileButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Automate");

        jLabel1.setText("Database Connection Active");

        port80FileButton.setText("File Upload");
        port80FileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                port80FileButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Insert Port 80 data");

        jLabel3.setText("Insert name and ip address");

        nameIpFileButton.setText("File Upload");
        nameIpFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameIpFileButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Insert Port 443 data");

        port443FileButton.setText("File Upload");
        port443FileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                port443FileButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Insert Port 8080 data");

        port8080FileButton.setText("File Upload");
        port8080FileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                port8080FileButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Insert Port 8081 data");

        port8081FileButton.setText("File Upload");
        port8081FileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                port8081FileButtonActionPerformed(evt);
            }
        });

        fileMenu.setText("File");

        jMenuItem1.setText("Close Connection");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem1);

        jMenuItem2.setText("jMenuItem2");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem2);

        jMenuBar1.add(fileMenu);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(queryResultField, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nameIpFileButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(port80FileButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(port443FileButton, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(port8080FileButton, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(port8081FileButton, javax.swing.GroupLayout.Alignment.TRAILING))))))
                .addContainerGap(63, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel2, jLabel3, jLabel4});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {nameIpFileButton, port443FileButton, port8080FileButton, port8081FileButton, port80FileButton});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel5, jLabel6});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(queryResultField)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(nameIpFileButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(port80FileButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(port443FileButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(port8080FileButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(port8081FileButton))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel2, jLabel3, jLabel4, jLabel5, jLabel6, nameIpFileButton, port443FileButton, port8080FileButton, port8081FileButton, port80FileButton});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void port80FileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_port80FileButtonActionPerformed
        // TODO add your handling code here
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("select port 80 file");
        if (chooser.showOpenDialog(this)==JFileChooser.APPROVE_OPTION)
        {
            File f = chooser.getSelectedFile();
            try {
                BufferedReader in = new BufferedReader(new FileReader(f));
                String line = null;
                Class.forName("com.mysql.jdbc.Driver");
                Connection connection = java.sql.DriverManager.getConnection("jdbc:mysql://localhost/nic?useSSL=false", Automate.user1, Automate.pass1);
                String query = new String("update demo set PORT_80 = ? where ip_address = ? ");
                PreparedStatement pstr = connection.prepareStatement(query);
                while((line =in.readLine())!=null)
                {
                    pstr.setString(1,"Y");
                    pstr.setString(2, line);
                    pstr.execute();
                }
            } 
            catch (FileNotFoundException ex) {
                Logger.getLogger(DBOperations.class.getName()).log(Level.SEVERE, null, ex);
                jLabel7.setText("File Not Found");
            } catch (IOException ex) {
                Logger.getLogger(DBOperations.class.getName()).log(Level.SEVERE, null, ex);
                jLabel7.setText("IO Exception occured");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(DBOperations.class.getName()).log(Level.SEVERE, null, ex);
                jLabel7.setText("Class Not Found");
            } catch (SQLException ex) {
                Logger.getLogger(DBOperations.class.getName()).log(Level.SEVERE, null, ex);
                jLabel7.setText("SQL Exception Occured");
            }
            
            finally
            {
                jLabel7.setText("Query Execution Complete");
            }
        }
        else
        {
            System.out.println("No file choosen.");
        }
        
    }//GEN-LAST:event_port80FileButtonActionPerformed

    private void nameIpFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameIpFileButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Name and IP File");
        if (chooser.showOpenDialog(this)==JFileChooser.APPROVE_OPTION)
        {
            File f = chooser.getSelectedFile();
            try {
                BufferedReader in = new BufferedReader(new FileReader(f));
                String line = null;
                Class.forName("com.mysql.jdbc.Driver");
                Connection connection = java.sql.DriverManager.getConnection("jdbc:mysql://localhost/nic?useSSL=false", Automate.user1, Automate.pass1);
                String query;
                query = "insert into demo (name, ip_address) values (?, ?)";
                PreparedStatement pstr = connection.prepareStatement(query);
                while((line =in.readLine())!=null)
                {
                    /*pstr.setString(1,line);
                    pstr.execute();*/
                    @SuppressWarnings("MismatchedReadAndWriteOfArray")
                    String[] parts = line.split(",");
                    pstr.setString(1,parts[0]);
                    pstr.setString(2, parts[1]);
                    pstr.execute();
                }
            } 
            catch (FileNotFoundException ex) {
                Logger.getLogger(DBOperations.class.getName()).log(Level.SEVERE, null, ex);
                jLabel7.setText("File Not Found");
            } catch (IOException ex) {
                Logger.getLogger(DBOperations.class.getName()).log(Level.SEVERE, null, ex);
                jLabel7.setText("IO Exception occured");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(DBOperations.class.getName()).log(Level.SEVERE, null, ex);
                jLabel7.setText("Class Not Found");
            } catch (SQLException ex) {
                Logger.getLogger(DBOperations.class.getName()).log(Level.SEVERE, null, ex);
                jLabel7.setText("SQL Exception Occured");
            }
            
            finally
            {
                jLabel7.setText("Query Execution Complete");
            }
        }
        else
        {
            System.out.println("No file choosen.");
        }
        
    }//GEN-LAST:event_nameIpFileButtonActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void port443FileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_port443FileButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("443 data file");
        if (chooser.showOpenDialog(this)==JFileChooser.APPROVE_OPTION)
        {
            File f = chooser.getSelectedFile();
            try {
                BufferedReader in = new BufferedReader(new FileReader(f));
                String line = null;
                Class.forName("com.mysql.jdbc.Driver");
                Connection connection = java.sql.DriverManager.getConnection("jdbc:mysql://localhost/nic?useSSL=false", Automate.user1, Automate.pass1);
                String query = new String("update demo set PORT_443 = ? where ip_address = ? ");
                PreparedStatement pstr = connection.prepareStatement(query);
                while((line =in.readLine())!=null)
                {
                    pstr.setString(1,"Y");
                    pstr.setString(2, line);
                    pstr.execute();
                }
            } 
            catch (FileNotFoundException ex) {
                Logger.getLogger(DBOperations.class.getName()).log(Level.SEVERE, null, ex);
                jLabel7.setText("File Not Found");
            } catch (IOException ex) {
                Logger.getLogger(DBOperations.class.getName()).log(Level.SEVERE, null, ex);
                jLabel7.setText("IO Exception occured");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(DBOperations.class.getName()).log(Level.SEVERE, null, ex);
                jLabel7.setText("Class Not Found");
            } catch (SQLException ex) {
                Logger.getLogger(DBOperations.class.getName()).log(Level.SEVERE, null, ex);
                jLabel7.setText("SQL Exception Occured");
            }
            
            finally
            {
                jLabel7.setText("Query Execution Complete");
            }
        }
        else
        {
            System.out.println("No file choosen.");
        }
    }//GEN-LAST:event_port443FileButtonActionPerformed

    private void port8080FileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_port8080FileButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Select port 8080 file");
        if (chooser.showOpenDialog(this)==JFileChooser.APPROVE_OPTION)
        {
            File f = chooser.getSelectedFile();
            try {
                BufferedReader in = new BufferedReader(new FileReader(f));
                String line = null;
                Class.forName("com.mysql.jdbc.Driver");
                Connection connection = java.sql.DriverManager.getConnection("jdbc:mysql://localhost/nic?useSSL=false", Automate.user1, Automate.pass1);
                String query = new String("update demo set PORT_8080 = ? where ip_address = ? ");
                PreparedStatement pstr = connection.prepareStatement(query);
                while((line =in.readLine())!=null)
                {
                    pstr.setString(1,"Y");
                    pstr.setString(2, line);
                    pstr.execute();
                }
            } 
            catch (FileNotFoundException ex) {
                Logger.getLogger(DBOperations.class.getName()).log(Level.SEVERE, null, ex);
                jLabel7.setText("File Not Found");
            } catch (IOException ex) {
                Logger.getLogger(DBOperations.class.getName()).log(Level.SEVERE, null, ex);
                jLabel7.setText("IO Exception occured");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(DBOperations.class.getName()).log(Level.SEVERE, null, ex);
                jLabel7.setText("Class Not Found");
            } catch (SQLException ex) {
                Logger.getLogger(DBOperations.class.getName()).log(Level.SEVERE, null, ex);
                jLabel7.setText("SQL Exception Occured");
            }
            
            finally
            {
                jLabel7.setText("Query Execution Complete");
            }
        }
        else
        {
            System.out.println("No file choosen.");
        }
    }//GEN-LAST:event_port8080FileButtonActionPerformed

    private void port8081FileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_port8081FileButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Select port 8081 file");
        if (chooser.showOpenDialog(this)==JFileChooser.APPROVE_OPTION)
        {
            File f = chooser.getSelectedFile();
            try {
                BufferedReader in = new BufferedReader(new FileReader(f));
                String line = null;
                Class.forName("com.mysql.jdbc.Driver");
                Connection connection = java.sql.DriverManager.getConnection("jdbc:mysql://localhost/nic?useSSL=false", Automate.user1, Automate.pass1);
                String query = new String("update demo set PORT_8081 = ? where ip_address = ? ");
                PreparedStatement pstr = connection.prepareStatement(query);
                while((line =in.readLine())!=null)
                {
                    pstr.setString(1,"Y");
                    pstr.setString(2, line);
                    pstr.execute();
                }
            } 
            catch (FileNotFoundException ex) {
                Logger.getLogger(DBOperations.class.getName()).log(Level.SEVERE, null, ex);
                jLabel7.setText("File Not Found");
            } catch (IOException ex) {
                Logger.getLogger(DBOperations.class.getName()).log(Level.SEVERE, null, ex);
                jLabel7.setText("IO Exception occured");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(DBOperations.class.getName()).log(Level.SEVERE, null, ex);
                jLabel7.setText("Class Not Found");
            } catch (SQLException ex) {
                Logger.getLogger(DBOperations.class.getName()).log(Level.SEVERE, null, ex);
                jLabel7.setText("SQL Exception Occured");
            }
            
            finally
            {
                jLabel7.setText("Query Execution Complete");
            }
        }
        else
        {
            System.out.println("No file choosen.");
        }
    }//GEN-LAST:event_port8081FileButtonActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here
        dispose();
        try {
            new nic.automate.ViewDatabase();
        } catch (SQLException ex) {
            Logger.getLogger(DBOperations.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DBOperations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DBOperations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DBOperations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DBOperations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DBOperations().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JButton nameIpFileButton;
    private javax.swing.JButton port443FileButton;
    private javax.swing.JButton port8080FileButton;
    private javax.swing.JButton port8081FileButton;
    private javax.swing.JButton port80FileButton;
    private javax.swing.JLabel queryResultField;
    // End of variables declaration//GEN-END:variables
}
